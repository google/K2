syntax = "proto2";

option java_package = "com.google.k2crypto.keyversions";

package com.google.k2crypto.keyversions;

// Container for a serialized KeyVersion
message KeyVersionData {
  extensions 10000 to max;

  // String uniquely identifying the key version type
  required string type = 1;

  // Raw bytes of the key version material that will be hashed into the ID
  optional bytes  core = 2;
}

// Container for just the essential fields of the KeyVersion
// (these fields will be hashed into the ID)
message KeyVersionCore {
  extensions 10000 to max;
}

// Block-Cipher Modes
enum BlockMode {
  // Encryption
  ECB = 1;        // Electronic CodeBook
  ECB_CTS = 2;    // Electronic CodeBook mode with Cipher Text Stealing
  CBC = 3;        // Cipher-Block Chaining
  CBC_CTS = 4;    // Cipher-Block Chaining mode with Cipher Text Stealing
  CTR = 5;        // Counter
  OFB = 6;        // Output Feedback
  CFB = 7;        // Cipher Feedback
  XTS = 8;        // XEX-based Tweaked-CodeBook mode with Cipher Text Stealing

  // Authenticated Encryption
  GCM = 101;      // Galois/Counter Mode
  OCB = 102;      // Offset Codebook
  CCM = 103;      // Counter with CBC-MAC
  EAX = 104;      // Conventional AUthenticated-Encryption MOde
  CWC = 105;      // Carter Wegman with Counter

  // Authentication
  CMAC = 201;     // Cipher-based MAC, aka One-Key CBC-MAC (OMAC)
  POLY1305 = 202; // Poly1305-AES MAC

  // Key Wrapping
  KW = 301;       // (AES) Key Wrap
  KWP = 302;      // (AES) Key Wrap with Padding
  TKW = 303;      // Triple Data Encryption Algorithm (TDEA) Key Wrap
}

// Padding Modes
enum Padding {
  ZERO = 0;                // Zero byte
  ANSI_X923 = 1;           // ANSI X.923
  PKCS5 = 2;               // PKCS #5
  PKCS7 = 3;               // PKCS #7
  ISO10126 = 4;            // ISO 10126 (withdrawn)
  ISO7816_4 = 5;           // ISO/IEC 7816-4

  // RSA standards
  PKCS1_1_5_ENCRYPT = 101; // PKCS #1 v1.5 (Encrypt)
  PKCS1_1_5_SIGN = 102;    // PKCS #1 v1.5 (Sign)
  OAEP = 103;              // Optimal Asymmetric Encryption Padding (PKCS #1 v2)
  PSS = 104;               // Probabilistic Signature Scheme (PKCS #1 v2.1)
}
