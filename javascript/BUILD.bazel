package(
    default_visibility = ["//tools/build_defs:internal_pkg"],
)

licenses(["notice"])  # Apache 2.0

load("@io_bazel_rules_closure//closure:defs.bzl", "closure_js_library", "closure_js_test")

closure_js_library(
    name = "primitives",
    #lenient = True,
    srcs = [
        "aead.js",
        "hybrid_decrypt.js",
        "hybrid_encrypt.js",
        "mac.js",
        "public_key_sign.js",
        "public_key_verify.js",
    ],
    deps = [
        "//javascript/exception",
        "@io_bazel_rules_closure//closure/library",
    ],
)

closure_js_library(
    name = "binary_reader",
    #lenient = True,
    srcs = [
        "binary_keyset_reader.js",
    ],
    deps = [
        ":readers_writers",
        "//javascript/exception",
        "//proto:tink_closure_proto",
        "@io_bazel_rules_closure//closure/library",
    ],
)

closure_js_library(
    name = "readers_writers",
    #lenient = True,
    srcs = [
        "keyset_reader.js",
        "keyset_writer.js",
    ],
    deps = [
        "//proto:tink_closure_proto",
        "@io_bazel_rules_closure//closure/library",
    ],
)

closure_js_library(
    name = "keyset_handle",
    #lenient = True,
    srcs = [
        "keyset_handle.js",
    ],
    deps = [
        ":key_manager",
        ":primitive_set",
        ":primitives",
        ":readers_writers",
        ":registry",
        ":util",
        "//javascript/exception",
        "//proto:tink_closure_proto",
        "@io_bazel_rules_closure//closure/library",
    ],
)

closure_js_library(
    name = "cleartext_keyset_handle",
    #lenient = True,
    srcs = [
        "cleartext_keyset_handle.js",
    ],
    deps = [
        ":keyset_handle",
        "//proto:tink_closure_proto",
        "@io_bazel_rules_closure//closure/library",
    ],
)

closure_js_library(
    name = "primitive_set",
    #lenient = True,
    srcs = [
        "primitive_set.js",
    ],
    deps = [
        ":crypto_format",
        "//javascript/exception",
        "//proto:tink_closure_proto",
        "@io_bazel_rules_closure//closure/library",
    ],
)

closure_js_library(
    name = "key_manager",
    #lenient = True,
    srcs = [
        "key_manager.js",
    ],
    deps = [
        "//javascript/exception",
        "//proto:tink_closure_proto",
        "@io_bazel_rules_closure//closure/library",
        "@io_bazel_rules_closure//closure/protobuf:jspb",
    ],
)

closure_js_library(
    name = "primitive_wrapper",
    #lenient = True,
    srcs = [
        "primitive_wrapper.js",
    ],
    deps = [
        ":primitive_set",
        "@io_bazel_rules_closure//closure/library",
    ],
)

closure_js_library(
    name = "catalogue",
    #lenient = True,
    srcs = [
        "catalogue.js",
    ],
    deps = [
        ":key_manager",
        "@io_bazel_rules_closure//closure/library",
    ],
)

closure_js_library(
    name = "registry",
    #lenient = True,
    srcs = [
        "registry.js",
    ],
    deps = [
        ":catalogue",
        ":key_manager",
        ":primitive_set",
        ":primitive_wrapper",
        ":util",
        "//javascript/exception",
        "//proto:tink_closure_proto",
        "@io_bazel_rules_closure//closure/library",
        "@io_bazel_rules_closure//closure/protobuf:jspb",
    ],
)

closure_js_library(
    name = "crypto_format",
    #lenient = True,
    srcs = [
        "crypto_format.js",
    ],
    deps = [
        "//javascript/exception",
        "//proto:tink_closure_proto",
        "@io_bazel_rules_closure//closure/library",
    ],
)

closure_js_library(
    name = "util",
    #lenient = True,
    srcs = [
        "util.js",
    ],
    deps = [
        "//javascript/exception",
        "//javascript/subtle",
        "//proto:common_closure_proto",
        "//proto:tink_closure_proto",
        "@io_bazel_rules_closure//closure/library",
    ],
)

closure_js_library(
    name = "config",
    #lenient = True,
    srcs = [
        "config.js",
    ],
    deps = [
        ":catalogue",
        ":key_manager",
        ":registry",
        "//javascript/exception",
        "//proto:config_closure_proto",
        "@io_bazel_rules_closure//closure/library",
    ],
)

# test
closure_js_library(
    name = "test_utils",
    #lenient = True,
    testonly = 1,
    srcs = [
        "test_utils.js",
    ],
    deps = [
        "//proto:tink_closure_proto",
        "@io_bazel_rules_closure//closure/library",
    ],
)

closure_js_test(
    name = "test_lib",
    testonly = 1,
    #lenient = True,
    srcs = glob([
        "*_test.js",
    ]),
    entry_points = {
        "binary_keyset_reader_test.js": ["tink.BinaryKeysetReaderTest"],
        "cleartext_keyset_handle_test.js": ["tink.CleartextKeysetHandleTest"],
        "config_test.js": ["tink.ConfigTest"],
        "crypto_format_test.js": ["tink.CryptoFormatTest"],
        "keyset_handle_test.js": ["tink.KeysetHandleTest"],
        "primitive_set_test.js": ["tink.PrimitiveSetTest"],
        "proto_test.js": ["tink.ProtoTest"],
        "registry_test.js": ["tink.RegistryTest"],
        "util_test.js": ["tink.UtilTest"],
    },
    deps = [
        ":binary_reader",
        ":catalogue",
        ":cleartext_keyset_handle",
        ":config",
        ":crypto_format",
        ":keyset_handle",
        ":key_manager",
        ":primitive_set",
        ":primitive_wrapper",
        ":primitives",
        ":registry",
        ":util",
        ":test_utils",
        "//javascript/aead",
        "//javascript/hybrid",
        "//javascript/subtle",
        "//javascript/subtle:aead",
        "//javascript/exception",
        "//proto:aes_ctr_closure_proto",
        "//proto:aes_ctr_hmac_aead_closure_proto",
        "//proto:common_closure_proto",
        "//proto:config_closure_proto",
        "//proto:ecdsa_closure_proto",
        "//proto:ecies_aead_hkdf_closure_proto",
        "//proto:hmac_closure_proto",
        "//proto:tink_closure_proto",
        "@io_bazel_rules_closure//closure/library:testing",
        "@io_bazel_rules_closure//closure/library/useragent",
        "@io_bazel_rules_closure//closure/protobuf:jspb",
    ],
)
