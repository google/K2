load("@rules_python//python:defs.bzl", "py_test")
load("@pip_deps//:requirements.bzl", "requirement")

package(default_visibility = ["//:__subpackages__"])

licenses(["notice"])

filegroup(
    name = "test_lib",
    srcs = [
        "test_util.sh",
    ],
)

sh_test(
    name = "keyset_reader_writer_test",
    size = "small",
    srcs = [
        "keyset_reader_writer_test.sh",
    ],
    data = [
        ":test_lib",
        "//testing/cc:keyset_reader_writer_cli",
        "//tinkey",
    ],
)

sh_test(
    name = "version_test",
    size = "medium",
    srcs = [
        "version_test.sh",
    ],
    data = [
        ":test_lib",
        "//testing:version_cli_java",
        "//testing/cc:version_cli_cc",
        "@tink_base//:tink_version",
    ],
)

py_test(
    name = "aead_test",
    srcs = ["aead_test.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        requirement("absl-py"),
        "//testing:supported_key_types",
        "//testing/cross_language/util:cli_aead",
        "//testing/cross_language/util:keyset_manager",
        "@tink_py//tink:tink_python",
        "@tink_py//tink/aead",
    ],
)

sh_test(
    name = "aead_envelope_test",
    size = "medium",
    srcs = [
        "aead_envelope_test.sh",
    ],
    data = [
        ":test_lib",
        "//testing:aead_cli_java",
        "//testing/cc:aead_cli_cc",
        "//testing/go:aead_cli_go",
        "//testing/go:generate_envelope_keyset",
        "//testing/python:aead_cli_python",
        "//tinkey",
        "@google_root_pem//file",
        "@tink_base//testdata:credentials",
    ],
    tags = ["no_rbe"],
)

py_test(
    name = "deterministic_aead_test",
    srcs = ["deterministic_aead_test.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        requirement("absl-py"),
        "//testing:supported_key_types",
        "//testing/cross_language/util:cli_daead",
        "//testing/cross_language/util:keyset_manager",
        "@tink_py//tink:tink_python",
        "@tink_py//tink/daead",
    ],
)

sh_test(
    name = "streaming_aead_test",
    size = "medium",
    srcs = [
        "streaming_aead_test.sh",
    ],
    data = [
        ":test_lib",
        "//testing:streaming_aead_cli_java",
        "//testing/cc:streaming_aead_cli_cc",
        "//testing/go:streaming_aead_cli_go",
        "//tinkey",
    ],
)

py_test(
    name = "mac_test",
    srcs = ["mac_test.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        requirement("absl-py"),
        "//testing:supported_key_types",
        "//testing/cross_language/util:cli_mac",
        "//testing/cross_language/util:keyset_manager",
        "@tink_py//tink:tink_python",
        "@tink_py//tink/mac",
    ],
)

sh_test(
    name = "prf_set_test",
    size = "medium",
    srcs = [
        "prf_set_test.sh",
    ],
    data = [
        ":test_lib",
        "//testing/cc:prf_set_cli_cc",
        "//testing/go:prf_set_cli_go",
        "//tinkey",
    ],
)

py_test(
    name = "hybrid_encryption_test",
    srcs = ["hybrid_encryption_test.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        requirement("absl-py"),
        "//testing:supported_key_types",
        "//testing/cross_language/util:cli_hybrid",
        "//testing/cross_language/util:keyset_manager",
        "@tink_py//tink:tink_python",
        "@tink_py//tink/hybrid",
    ],
)

py_test(
    name = "signature_test",
    srcs = ["signature_test.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        requirement("absl-py"),
        "//testing:supported_key_types",
        "//testing/cross_language/util:cli_signature",
        "//testing/cross_language/util:keyset_manager",
        "@tink_py//tink:tink_python",
        "@tink_py//tink/signature",
    ],
)
